{
  "openapi": "3.0.1",
  "info": {
    "title": "ATSPM Report Data Api",
    "description": "ATSPM Report Data with OpenAPI, Swashbuckle, and API versioning.",
    "contact": {
      "name": "udotdevelopment",
      "url": "https://udottraffic.utah.gov/atspm/",
      "email": "udotdevelopment@gmail.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    },
    "version": "1.0"
  },
  "paths": {
    "/api/v1/Aggregation/test": {
      "get": {
        "tags": ["Aggregation"],
        "summary": "Get example data for testing",
        "operationId": "GetAggregationTestData",
        "responses": {
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AggregationResult"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AggregationResult"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Aggregation/getReportData": {
      "post": {
        "tags": ["Aggregation"],
        "summary": "Get report data",
        "operationId": "GetAggregationReportData",
        "requestBody": {
          "description": "Reporting options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AggregationOptions"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AggregationOptions"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AggregationOptions"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/AggregationOptions"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/AggregationOptions"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/AggregationOptions"
              }
            }
          }
        },
        "responses": {
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AggregationResult"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AggregationResult"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ApproachDelay/test": {
      "get": {
        "tags": ["ApproachDelay"],
        "summary": "Get example data for testing",
        "operationId": "GetApproachDelayTestData",
        "responses": {
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApproachDelayResult"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApproachDelayResult"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ApproachDelay/getReportData": {
      "post": {
        "tags": ["ApproachDelay"],
        "summary": "Get report data",
        "operationId": "GetApproachDelayReportData",
        "requestBody": {
          "description": "Reporting options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApproachDelayOptions"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApproachDelayOptions"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApproachDelayOptions"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ApproachDelayOptions"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/ApproachDelayOptions"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/ApproachDelayOptions"
              }
            }
          }
        },
        "responses": {
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApproachDelayResult"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApproachDelayResult"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ApproachSpeed/test": {
      "get": {
        "tags": ["ApproachSpeed"],
        "summary": "Get example data for testing",
        "operationId": "GetApproachSpeedTestData",
        "responses": {
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApproachSpeedResult"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApproachSpeedResult"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ApproachSpeed/getReportData": {
      "post": {
        "tags": ["ApproachSpeed"],
        "summary": "Get report data",
        "operationId": "GetApproachSpeedReportData",
        "requestBody": {
          "description": "Reporting options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApproachSpeedOptions"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApproachSpeedOptions"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApproachSpeedOptions"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ApproachSpeedOptions"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/ApproachSpeedOptions"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/ApproachSpeedOptions"
              }
            }
          }
        },
        "responses": {
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApproachSpeedResult"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApproachSpeedResult"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ApproachVolume/test": {
      "get": {
        "tags": ["ApproachVolume"],
        "summary": "Get example data for testing",
        "operationId": "GetApproachVolumeTestData",
        "responses": {
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApproachVolumeResult"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApproachVolumeResult"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ApproachVolume/getReportData": {
      "post": {
        "tags": ["ApproachVolume"],
        "summary": "Get report data",
        "operationId": "GetApproachVolumeReportData",
        "requestBody": {
          "description": "Reporting options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApproachVolumeOptions"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApproachVolumeOptions"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApproachVolumeOptions"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ApproachVolumeOptions"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/ApproachVolumeOptions"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/ApproachVolumeOptions"
              }
            }
          }
        },
        "responses": {
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApproachVolumeResult"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApproachVolumeResult"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ArrivalOnRed/test": {
      "get": {
        "tags": ["ArrivalOnRed"],
        "summary": "Get example data for testing",
        "operationId": "GetArrivalOnRedTestData",
        "responses": {
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArrivalOnRedResult"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArrivalOnRedResult"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ArrivalOnRed/getReportData": {
      "post": {
        "tags": ["ArrivalOnRed"],
        "summary": "Get report data",
        "operationId": "GetArrivalOnRedReportData",
        "requestBody": {
          "description": "Reporting options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ArrivalOnRedOptions"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ArrivalOnRedOptions"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ArrivalOnRedOptions"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ArrivalOnRedOptions"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/ArrivalOnRedOptions"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/ArrivalOnRedOptions"
              }
            }
          }
        },
        "responses": {
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArrivalOnRedResult"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArrivalOnRedResult"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/GreenTimeUtilization/test": {
      "get": {
        "tags": ["GreenTimeUtilization"],
        "summary": "Get example data for testing",
        "operationId": "GetGreenTimeUtilizationTestData",
        "responses": {
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GreenTimeUtilizationResult"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GreenTimeUtilizationResult"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/GreenTimeUtilization/getReportData": {
      "post": {
        "tags": ["GreenTimeUtilization"],
        "summary": "Get report data",
        "operationId": "GetGreenTimeUtilizationReportData",
        "requestBody": {
          "description": "Reporting options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GreenTimeUtilizationOptions"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GreenTimeUtilizationOptions"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GreenTimeUtilizationOptions"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/GreenTimeUtilizationOptions"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/GreenTimeUtilizationOptions"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/GreenTimeUtilizationOptions"
              }
            }
          }
        },
        "responses": {
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GreenTimeUtilizationResult"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GreenTimeUtilizationResult"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/LeftTurnGapAnalysis/test": {
      "get": {
        "tags": ["LeftTurnGapAnalysis"],
        "summary": "Get example data for testing",
        "operationId": "GetLeftTurnGapAnalysisTestData",
        "responses": {
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LeftTurnGapAnalysisResult"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LeftTurnGapAnalysisResult"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/LeftTurnGapAnalysis/getReportData": {
      "post": {
        "tags": ["LeftTurnGapAnalysis"],
        "summary": "Get report data",
        "operationId": "GetLeftTurnGapAnalysisReportData",
        "requestBody": {
          "description": "Reporting options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LeftTurnGapAnalysisOptions"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LeftTurnGapAnalysisOptions"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LeftTurnGapAnalysisOptions"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/LeftTurnGapAnalysisOptions"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/LeftTurnGapAnalysisOptions"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/LeftTurnGapAnalysisOptions"
              }
            }
          }
        },
        "responses": {
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LeftTurnGapAnalysisResult"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LeftTurnGapAnalysisResult"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/LeftTurnGapDuration/test": {
      "get": {
        "tags": ["LeftTurnGapDuration"],
        "summary": "Get example data for testing",
        "operationId": "GetLeftTurnGapDurationTestData",
        "responses": {
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GapDurationResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GapDurationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/LeftTurnGapDuration/getReportData": {
      "post": {
        "tags": ["LeftTurnGapDuration"],
        "summary": "Get report data",
        "operationId": "GetLeftTurnGapDurationReportData",
        "requestBody": {
          "description": "Reporting options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GapDurationOptions"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GapDurationOptions"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GapDurationOptions"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/GapDurationOptions"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/GapDurationOptions"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/GapDurationOptions"
              }
            }
          }
        },
        "responses": {
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GapDurationResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GapDurationResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/LeftTurnGapReport/test": {
      "get": {
        "tags": ["LeftTurnGapReport"],
        "summary": "Get example data for testing",
        "operationId": "GetLeftTurnGapReportTestData",
        "responses": {
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LeftTurnGapReportResult"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LeftTurnGapReportResult"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/LeftTurnGapReport/getReportData": {
      "post": {
        "tags": ["LeftTurnGapReport"],
        "summary": "Get report data",
        "operationId": "GetLeftTurnGapReportReportData",
        "requestBody": {
          "description": "Reporting options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LeftTurnGapReportOptions"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LeftTurnGapReportOptions"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LeftTurnGapReportOptions"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/LeftTurnGapReportOptions"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/LeftTurnGapReportOptions"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/LeftTurnGapReportOptions"
              }
            }
          }
        },
        "responses": {
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LeftTurnGapReportResult"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LeftTurnGapReportResult"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/LeftTurnGapReportDataCheck/test": {
      "get": {
        "tags": ["LeftTurnGapReportDataCheck"],
        "summary": "Get example data for testing",
        "operationId": "GetLeftTurnGapReportDataCheckTestData",
        "responses": {
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeftTurnGapDataCheckResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/LeftTurnGapDataCheckResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/LeftTurnGapReportDataCheck/getReportData": {
      "post": {
        "tags": ["LeftTurnGapReportDataCheck"],
        "summary": "Get report data",
        "operationId": "GetLeftTurnGapReportDataCheckReportData",
        "requestBody": {
          "description": "Reporting options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LeftTurnGapDataCheckOptions"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LeftTurnGapDataCheckOptions"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LeftTurnGapDataCheckOptions"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/LeftTurnGapDataCheckOptions"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/LeftTurnGapDataCheckOptions"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/LeftTurnGapDataCheckOptions"
              }
            }
          }
        },
        "responses": {
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeftTurnGapDataCheckResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/LeftTurnGapDataCheckResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/LeftTurnPeakHours/test": {
      "get": {
        "tags": ["LeftTurnPeakHours"],
        "summary": "Get example data for testing",
        "operationId": "GetLeftTurnPeakHoursTestData",
        "responses": {
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PeakHourResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PeakHourResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/LeftTurnPeakHours/getReportData": {
      "post": {
        "tags": ["LeftTurnPeakHours"],
        "summary": "Get report data",
        "operationId": "GetLeftTurnPeakHoursReportData",
        "requestBody": {
          "description": "Reporting options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PeakHourOptions"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PeakHourOptions"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PeakHourOptions"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/PeakHourOptions"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/PeakHourOptions"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/PeakHourOptions"
              }
            }
          }
        },
        "responses": {
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PeakHourResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PeakHourResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/LeftTurnPedActuation/test": {
      "get": {
        "tags": ["LeftTurnPedActuation"],
        "summary": "Get example data for testing",
        "operationId": "GetLeftTurnPedActuationTestData",
        "responses": {
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PedActuationResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PedActuationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/LeftTurnPedActuation/getReportData": {
      "post": {
        "tags": ["LeftTurnPedActuation"],
        "summary": "Get report data",
        "operationId": "GetLeftTurnPedActuationReportData",
        "requestBody": {
          "description": "Reporting options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PedActuationOptions"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PedActuationOptions"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PedActuationOptions"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/PedActuationOptions"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/PedActuationOptions"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/PedActuationOptions"
              }
            }
          }
        },
        "responses": {
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PedActuationResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PedActuationResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/LeftTurnSplitFail/test": {
      "get": {
        "tags": ["LeftTurnSplitFail"],
        "summary": "Get example data for testing",
        "operationId": "GetLeftTurnSplitFailTestData",
        "responses": {
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeftTurnSplitFailResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/LeftTurnSplitFailResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/LeftTurnSplitFail/getReportData": {
      "post": {
        "tags": ["LeftTurnSplitFail"],
        "summary": "Get report data",
        "operationId": "GetLeftTurnSplitFailReportData",
        "requestBody": {
          "description": "Reporting options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LeftTurnSplitFailOptions"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LeftTurnSplitFailOptions"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LeftTurnSplitFailOptions"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/LeftTurnSplitFailOptions"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/LeftTurnSplitFailOptions"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/LeftTurnSplitFailOptions"
              }
            }
          }
        },
        "responses": {
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeftTurnSplitFailResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/LeftTurnSplitFailResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/LeftTurnVolume/test": {
      "get": {
        "tags": ["LeftTurnVolume"],
        "summary": "Get example data for testing",
        "operationId": "GetLeftTurnVolumeTestData",
        "responses": {
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VolumeResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/VolumeResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/LeftTurnVolume/getReportData": {
      "post": {
        "tags": ["LeftTurnVolume"],
        "summary": "Get report data",
        "operationId": "GetLeftTurnVolumeReportData",
        "requestBody": {
          "description": "Reporting options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VolumeOptions"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/VolumeOptions"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/VolumeOptions"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/VolumeOptions"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/VolumeOptions"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/VolumeOptions"
              }
            }
          }
        },
        "responses": {
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VolumeResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/VolumeResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/LinkPivot/getPcdData": {
      "post": {
        "tags": ["LinkPivot"],
        "operationId": "GetLinkPivotPcdData",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LinkPivotPcdOptions"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LinkPivotPcdOptions"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LinkPivotPcdOptions"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/LinkPivotPcdOptions"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/LinkPivotPcdOptions"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/LinkPivotPcdOptions"
              }
            }
          }
        },
        "responses": {
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LinkPivotPcdResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/LinkPivotPcdResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/LinkPivot/test": {
      "get": {
        "tags": ["LinkPivot"],
        "summary": "Get example data for testing",
        "operationId": "GetLinkPivotTestData",
        "responses": {
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LinkPivotResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/LinkPivotResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/LinkPivot/getReportData": {
      "post": {
        "tags": ["LinkPivot"],
        "summary": "Get report data",
        "operationId": "GetLinkPivotReportData",
        "requestBody": {
          "description": "Reporting options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LinkPivotOptions"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LinkPivotOptions"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LinkPivotOptions"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/LinkPivotOptions"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/LinkPivotOptions"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/LinkPivotOptions"
              }
            }
          }
        },
        "responses": {
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LinkPivotResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/LinkPivotResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/PedDelay/test": {
      "get": {
        "tags": ["PedDelay"],
        "summary": "Get example data for testing",
        "operationId": "GetPedDelayTestData",
        "responses": {
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PedDelayResult"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PedDelayResult"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/PedDelay/getReportData": {
      "post": {
        "tags": ["PedDelay"],
        "summary": "Get report data",
        "operationId": "GetPedDelayReportData",
        "requestBody": {
          "description": "Reporting options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PedDelayOptions"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PedDelayOptions"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PedDelayOptions"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/PedDelayOptions"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/PedDelayOptions"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/PedDelayOptions"
              }
            }
          }
        },
        "responses": {
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PedDelayResult"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PedDelayResult"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/PreemptDetail/test": {
      "get": {
        "tags": ["PreemptDetail"],
        "summary": "Get example data for testing",
        "operationId": "GetPreemptDetailTestData",
        "responses": {
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PreemptDetailResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PreemptDetailResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/PreemptDetail/getReportData": {
      "post": {
        "tags": ["PreemptDetail"],
        "summary": "Get report data",
        "operationId": "GetPreemptDetailReportData",
        "requestBody": {
          "description": "Reporting options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PreemptDetailOptions"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PreemptDetailOptions"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PreemptDetailOptions"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/PreemptDetailOptions"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/PreemptDetailOptions"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/PreemptDetailOptions"
              }
            }
          }
        },
        "responses": {
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PreemptDetailResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PreemptDetailResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/PreemptService/test": {
      "get": {
        "tags": ["PreemptService"],
        "summary": "Get example data for testing",
        "operationId": "GetPreemptServiceTestData",
        "responses": {
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PreemptServiceResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PreemptServiceResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/PreemptService/getReportData": {
      "post": {
        "tags": ["PreemptService"],
        "summary": "Get report data",
        "operationId": "GetPreemptServiceReportData",
        "requestBody": {
          "description": "Reporting options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PreemptServiceOptions"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PreemptServiceOptions"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PreemptServiceOptions"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/PreemptServiceOptions"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/PreemptServiceOptions"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/PreemptServiceOptions"
              }
            }
          }
        },
        "responses": {
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PreemptServiceResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PreemptServiceResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/PreemptServiceRequest/test": {
      "get": {
        "tags": ["PreemptServiceRequest"],
        "summary": "Get example data for testing",
        "operationId": "GetPreemptServiceRequestTestData",
        "responses": {
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PreemptServiceRequestResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PreemptServiceRequestResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/PreemptServiceRequest/getReportData": {
      "post": {
        "tags": ["PreemptServiceRequest"],
        "summary": "Get report data",
        "operationId": "GetPreemptServiceRequestReportData",
        "requestBody": {
          "description": "Reporting options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PreemptServiceRequestOptions"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PreemptServiceRequestOptions"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PreemptServiceRequestOptions"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/PreemptServiceRequestOptions"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/PreemptServiceRequestOptions"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/PreemptServiceRequestOptions"
              }
            }
          }
        },
        "responses": {
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PreemptServiceRequestResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PreemptServiceRequestResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/PurdueCoordinationDiagram/test": {
      "get": {
        "tags": ["PurdueCoordinationDiagram"],
        "summary": "Get example data for testing",
        "operationId": "GetPurdueCoordinationDiagramTestData",
        "responses": {
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PurdueCoordinationDiagramResult"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PurdueCoordinationDiagramResult"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/PurdueCoordinationDiagram/getReportData": {
      "post": {
        "tags": ["PurdueCoordinationDiagram"],
        "summary": "Get report data",
        "operationId": "GetPurdueCoordinationDiagramReportData",
        "requestBody": {
          "description": "Reporting options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PurdueCoordinationDiagramOptions"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PurdueCoordinationDiagramOptions"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PurdueCoordinationDiagramOptions"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/PurdueCoordinationDiagramOptions"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/PurdueCoordinationDiagramOptions"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/PurdueCoordinationDiagramOptions"
              }
            }
          }
        },
        "responses": {
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PurdueCoordinationDiagramResult"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PurdueCoordinationDiagramResult"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/PurduePhaseTermination/test": {
      "get": {
        "tags": ["PurduePhaseTermination"],
        "summary": "Get example data for testing",
        "operationId": "GetPurduePhaseTerminationTestData",
        "responses": {
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhaseTerminationResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PhaseTerminationResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/PurduePhaseTermination/getReportData": {
      "post": {
        "tags": ["PurduePhaseTermination"],
        "summary": "Get report data",
        "operationId": "GetPurduePhaseTerminationReportData",
        "requestBody": {
          "description": "Reporting options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PurduePhaseTerminationOptions"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PurduePhaseTerminationOptions"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PurduePhaseTerminationOptions"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/PurduePhaseTerminationOptions"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/PurduePhaseTerminationOptions"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/PurduePhaseTerminationOptions"
              }
            }
          }
        },
        "responses": {
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhaseTerminationResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PhaseTerminationResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/RampMetering/test": {
      "get": {
        "tags": ["RampMetering"],
        "summary": "Get example data for testing",
        "operationId": "GetRampMeteringTestData",
        "responses": {
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RampMeteringResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RampMeteringResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/RampMetering/getReportData": {
      "post": {
        "tags": ["RampMetering"],
        "summary": "Get report data",
        "operationId": "GetRampMeteringReportData",
        "requestBody": {
          "description": "Reporting options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RampMeteringOptions"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RampMeteringOptions"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RampMeteringOptions"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/RampMeteringOptions"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/RampMeteringOptions"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/RampMeteringOptions"
              }
            }
          }
        },
        "responses": {
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RampMeteringResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RampMeteringResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/SplitFail/test": {
      "get": {
        "tags": ["SplitFail"],
        "summary": "Get example data for testing",
        "operationId": "GetSplitFailTestData",
        "responses": {
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SplitFailsResult"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SplitFailsResult"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/SplitFail/getReportData": {
      "post": {
        "tags": ["SplitFail"],
        "summary": "Get report data",
        "operationId": "GetSplitFailReportData",
        "requestBody": {
          "description": "Reporting options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SplitFailOptions"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SplitFailOptions"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SplitFailOptions"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/SplitFailOptions"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/SplitFailOptions"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/SplitFailOptions"
              }
            }
          }
        },
        "responses": {
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SplitFailsResult"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SplitFailsResult"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/SplitMonitor/test": {
      "get": {
        "tags": ["SplitMonitor"],
        "summary": "Get example data for testing",
        "operationId": "GetSplitMonitorTestData",
        "responses": {
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SplitMonitorResult"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SplitMonitorResult"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/SplitMonitor/getReportData": {
      "post": {
        "tags": ["SplitMonitor"],
        "summary": "Get report data",
        "operationId": "GetSplitMonitorReportData",
        "requestBody": {
          "description": "Reporting options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SplitMonitorOptions"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SplitMonitorOptions"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SplitMonitorOptions"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/SplitMonitorOptions"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/SplitMonitorOptions"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/SplitMonitorOptions"
              }
            }
          }
        },
        "responses": {
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SplitMonitorResult"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SplitMonitorResult"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/TimeSpaceDiagram/test": {
      "get": {
        "tags": ["TimeSpaceDiagram"],
        "summary": "Get example data for testing",
        "operationId": "GetTimeSpaceDiagramTestData",
        "responses": {
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TimeSpaceDiagramResultForPhase"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TimeSpaceDiagramResultForPhase"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/TimeSpaceDiagram/getReportData": {
      "post": {
        "tags": ["TimeSpaceDiagram"],
        "summary": "Get report data",
        "operationId": "GetTimeSpaceDiagramReportData",
        "requestBody": {
          "description": "Reporting options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TimeSpaceDiagramOptions"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TimeSpaceDiagramOptions"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TimeSpaceDiagramOptions"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/TimeSpaceDiagramOptions"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/TimeSpaceDiagramOptions"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/TimeSpaceDiagramOptions"
              }
            }
          }
        },
        "responses": {
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TimeSpaceDiagramResultForPhase"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TimeSpaceDiagramResultForPhase"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/TimeSpaceDiagramAverage/test": {
      "get": {
        "tags": ["TimeSpaceDiagramAverage"],
        "summary": "Get example data for testing",
        "operationId": "GetTimeSpaceDiagramAverageTestData",
        "responses": {
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TimeSpaceDiagramAverageResult"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TimeSpaceDiagramAverageResult"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/TimeSpaceDiagramAverage/getReportData": {
      "post": {
        "tags": ["TimeSpaceDiagramAverage"],
        "summary": "Get report data",
        "operationId": "GetTimeSpaceDiagramAverageReportData",
        "requestBody": {
          "description": "Reporting options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TimeSpaceDiagramAverageOptions"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TimeSpaceDiagramAverageOptions"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TimeSpaceDiagramAverageOptions"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/TimeSpaceDiagramAverageOptions"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/TimeSpaceDiagramAverageOptions"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/TimeSpaceDiagramAverageOptions"
              }
            }
          }
        },
        "responses": {
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TimeSpaceDiagramAverageResult"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TimeSpaceDiagramAverageResult"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/TimingAndActuation/test": {
      "get": {
        "tags": ["TimingAndActuation"],
        "summary": "Get example data for testing",
        "operationId": "GetTimingAndActuationTestData",
        "responses": {
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TimingAndActuationsForPhaseResult"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TimingAndActuationsForPhaseResult"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/TimingAndActuation/getReportData": {
      "post": {
        "tags": ["TimingAndActuation"],
        "summary": "Get report data",
        "operationId": "GetTimingAndActuationReportData",
        "requestBody": {
          "description": "Reporting options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TimingAndActuationsOptions"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TimingAndActuationsOptions"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TimingAndActuationsOptions"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/TimingAndActuationsOptions"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/TimingAndActuationsOptions"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/TimingAndActuationsOptions"
              }
            }
          }
        },
        "responses": {
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TimingAndActuationsForPhaseResult"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TimingAndActuationsForPhaseResult"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/TransitSignalPriority/test": {
      "get": {
        "tags": ["TransitSignalPriority"],
        "summary": "Get example data for testing",
        "operationId": "GetTransitSignalPriorityTestData",
        "responses": {
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TransitSignalPriorityResult"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TransitSignalPriorityResult"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/TransitSignalPriority/getReportData": {
      "post": {
        "tags": ["TransitSignalPriority"],
        "summary": "Get report data",
        "operationId": "GetTransitSignalPriorityReportData",
        "requestBody": {
          "description": "Reporting options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransitSignalPriorityOptions"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TransitSignalPriorityOptions"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TransitSignalPriorityOptions"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/TransitSignalPriorityOptions"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/TransitSignalPriorityOptions"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/TransitSignalPriorityOptions"
              }
            }
          }
        },
        "responses": {
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TransitSignalPriorityResult"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TransitSignalPriorityResult"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/TurningMovementCounts/test": {
      "get": {
        "tags": ["TurningMovementCounts"],
        "summary": "Get example data for testing",
        "operationId": "GetTurningMovementCountsTestData",
        "responses": {
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TurningMovementCountsResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TurningMovementCountsResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/TurningMovementCounts/getReportData": {
      "post": {
        "tags": ["TurningMovementCounts"],
        "summary": "Get report data",
        "operationId": "GetTurningMovementCountsReportData",
        "requestBody": {
          "description": "Reporting options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TurningMovementCountsOptions"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TurningMovementCountsOptions"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TurningMovementCountsOptions"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/TurningMovementCountsOptions"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/TurningMovementCountsOptions"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/TurningMovementCountsOptions"
              }
            }
          }
        },
        "responses": {
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TurningMovementCountsResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TurningMovementCountsResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/WaitTime/test": {
      "get": {
        "tags": ["WaitTime"],
        "summary": "Get example data for testing",
        "operationId": "GetWaitTimeTestData",
        "responses": {
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WaitTimeResult"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WaitTimeResult"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/WaitTime/getReportData": {
      "post": {
        "tags": ["WaitTime"],
        "summary": "Get report data",
        "operationId": "GetWaitTimeReportData",
        "requestBody": {
          "description": "Reporting options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WaitTimeOptions"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WaitTimeOptions"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WaitTimeOptions"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/WaitTimeOptions"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/WaitTimeOptions"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/WaitTimeOptions"
              }
            }
          }
        },
        "responses": {
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WaitTimeResult"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WaitTimeResult"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Watchdog/GetIssueTypes": {
      "get": {
        "tags": ["Watchdog"],
        "operationId": "GetWatchdogIssueTypes",
        "responses": {
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Watchdog/test": {
      "get": {
        "tags": ["Watchdog"],
        "summary": "Get example data for testing",
        "operationId": "GetWatchdogTestData",
        "responses": {
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WatchDogResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/WatchDogResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Watchdog/getReportData": {
      "post": {
        "tags": ["Watchdog"],
        "summary": "Get report data",
        "operationId": "GetWatchdogReportData",
        "requestBody": {
          "description": "Reporting options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WatchDogOptions"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WatchDogOptions"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WatchDogOptions"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/WatchDogOptions"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/WatchDogOptions"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/WatchDogOptions"
              }
            }
          }
        },
        "responses": {
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WatchDogResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/WatchDogResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/WatchDogDashboard/getDashboardGroup": {
      "post": {
        "tags": ["WatchDogDashboard"],
        "operationId": "GetWatchDogDashboardDashboardGroup",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WatchDogDashboardOptions"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WatchDogDashboardOptions"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WatchDogDashboardOptions"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/WatchDogDashboardOptions"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/WatchDogDashboardOptions"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/WatchDogDashboardOptions"
              }
            }
          }
        },
        "responses": {
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WatchDogIssueTypeGroup"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/WatchDogIssueTypeGroup"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/YellowRedActivations/test": {
      "get": {
        "tags": ["YellowRedActivations"],
        "summary": "Get example data for testing",
        "operationId": "GetYellowRedActivationsTestData",
        "responses": {
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/YellowRedActivationsResult"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/YellowRedActivationsResult"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/YellowRedActivations/getReportData": {
      "post": {
        "tags": ["YellowRedActivations"],
        "summary": "Get report data",
        "operationId": "GetYellowRedActivationsReportData",
        "requestBody": {
          "description": "Reporting options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/YellowRedActivationsOptions"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/YellowRedActivationsOptions"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/YellowRedActivationsOptions"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/YellowRedActivationsOptions"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/YellowRedActivationsOptions"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/YellowRedActivationsOptions"
              }
            }
          }
        },
        "responses": {
          "406": {
            "description": "Not Acceptable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/YellowRedActivationsResult"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/YellowRedActivationsResult"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AggregationCalculationType": {
        "enum": [0, 1],
        "type": "integer",
        "format": "int32"
      },
      "AggregationDataPoint": {
        "type": "object",
        "properties": {
          "identifier": {
            "type": "string",
            "nullable": true
          },
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "value": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "AggregationOptions": {
        "type": "object",
        "properties": {
          "locationIdentifiers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          },
          "aggregationType": {
            "$ref": "#/components/schemas/AggregationType"
          },
          "detectionType": {
            "$ref": "#/components/schemas/DetectionTypes"
          },
          "dataType": {
            "type": "integer",
            "format": "int32"
          },
          "timeOptions": {
            "$ref": "#/components/schemas/TimeOptions"
          },
          "selectedAggregationType": {
            "$ref": "#/components/schemas/AggregationCalculationType"
          },
          "selectedXAxisType": {
            "$ref": "#/components/schemas/XAxisType"
          },
          "selectedSeries": {
            "$ref": "#/components/schemas/SeriesType"
          },
          "locations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FilterSignal"
            },
            "nullable": true
          },
          "filterDirections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FilterDirection"
            },
            "nullable": true
          },
          "filterMovements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FilterMovement"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AggregationResult": {
        "type": "object",
        "properties": {
          "identifier": {
            "type": "string",
            "nullable": true
          },
          "series": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Series"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AggregationType": {
        "enum": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],
        "type": "integer",
        "format": "int32"
      },
      "ApproachDelayOptions": {
        "type": "object",
        "properties": {
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          },
          "binSize": {
            "type": "integer",
            "format": "int32"
          },
          "getPermissivePhase": {
            "type": "boolean"
          },
          "getVolume": {
            "type": "boolean"
          },
          "locationIdentifier": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApproachDelayPlan": {
        "type": "object",
        "properties": {
          "planNumber": {
            "type": "string",
            "nullable": true
          },
          "start": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "end": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "planDescription": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "averageDelay": {
            "type": "number",
            "format": "double"
          },
          "totalDelay": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "ApproachDelayResult": {
        "type": "object",
        "properties": {
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          },
          "locationIdentifier": {
            "type": "string",
            "nullable": true
          },
          "locationDescription": {
            "type": "string",
            "nullable": true
          },
          "approachId": {
            "type": "integer",
            "format": "int32"
          },
          "approachDescription": {
            "type": "string",
            "nullable": true
          },
          "phaseNumber": {
            "type": "integer",
            "format": "int32"
          },
          "phaseDescription": {
            "type": "string",
            "nullable": true
          },
          "averageDelayPerVehicle": {
            "type": "number",
            "format": "double"
          },
          "totalDelay": {
            "type": "number",
            "format": "double"
          },
          "plans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApproachDelayPlan"
            },
            "nullable": true
          },
          "approachDelayDataPoints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataPointForDouble"
            },
            "nullable": true
          },
          "approachDelayPerVehicleDataPoints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataPointForDouble"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApproachSpeedOptions": {
        "type": "object",
        "properties": {
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          },
          "binSize": {
            "type": "integer",
            "format": "int32"
          },
          "metricTypeId": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "locationIdentifier": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApproachSpeedResult": {
        "type": "object",
        "properties": {
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          },
          "locationIdentifier": {
            "type": "string",
            "nullable": true
          },
          "locationDescription": {
            "type": "string",
            "nullable": true
          },
          "approachId": {
            "type": "integer",
            "format": "int32"
          },
          "approachDescription": {
            "type": "string",
            "nullable": true
          },
          "phaseNumber": {
            "type": "integer",
            "format": "int32"
          },
          "phaseDescription": {
            "type": "string",
            "nullable": true
          },
          "detectionType": {
            "type": "string",
            "nullable": true
          },
          "distanceFromStopBar": {
            "type": "integer",
            "format": "int32"
          },
          "postedSpeed": {
            "type": "number",
            "format": "double"
          },
          "plans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SpeedPlan"
            },
            "nullable": true
          },
          "averageSpeeds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataPointForInt"
            },
            "nullable": true
          },
          "eightyFifthSpeeds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataPointForInt"
            },
            "nullable": true
          },
          "fifteenthSpeeds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataPointForInt"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApproachVolumeOptions": {
        "type": "object",
        "properties": {
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          },
          "binSize": {
            "type": "integer",
            "format": "int32"
          },
          "showDirectionalSplits": {
            "type": "boolean"
          },
          "getVolume": {
            "type": "boolean"
          },
          "showNbEbVolume": {
            "type": "boolean"
          },
          "showSbWbVolume": {
            "type": "boolean"
          },
          "showTMCDetection": {
            "type": "boolean"
          },
          "showAdvanceDetection": {
            "type": "boolean"
          },
          "metricTypeId": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "locationIdentifier": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApproachVolumeResult": {
        "type": "object",
        "properties": {
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          },
          "locationIdentifier": {
            "type": "string",
            "nullable": true
          },
          "locationDescription": {
            "type": "string",
            "nullable": true
          },
          "primaryDirectionName": {
            "type": "string",
            "nullable": true
          },
          "opposingDirectionName": {
            "type": "string",
            "nullable": true
          },
          "distanceFromStopBar": {
            "type": "integer",
            "format": "int32"
          },
          "detectorType": {
            "type": "string",
            "nullable": true
          },
          "primaryDirectionVolumes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataPointForInt"
            },
            "nullable": true
          },
          "opposingDirectionVolumes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataPointForInt"
            },
            "nullable": true
          },
          "combinedDirectionVolumes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataPointForInt"
            },
            "nullable": true
          },
          "primaryDFactors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataPointForDouble"
            },
            "nullable": true
          },
          "opposingDFactors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataPointForDouble"
            },
            "nullable": true
          },
          "summaryData": {
            "$ref": "#/components/schemas/SummaryData"
          }
        },
        "additionalProperties": false
      },
      "AreaDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ArrivalOnRedOptions": {
        "type": "object",
        "properties": {
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          },
          "binSize": {
            "type": "integer",
            "format": "int32"
          },
          "getPermissivePhase": {
            "type": "boolean"
          },
          "locationIdentifier": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ArrivalOnRedPlan": {
        "type": "object",
        "properties": {
          "planNumber": {
            "type": "string",
            "nullable": true
          },
          "start": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "end": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "planDescription": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "percentArrivalOnRed": {
            "type": "number",
            "format": "double"
          },
          "percentRedTime": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "ArrivalOnRedResult": {
        "type": "object",
        "properties": {
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          },
          "locationIdentifier": {
            "type": "string",
            "nullable": true
          },
          "locationDescription": {
            "type": "string",
            "nullable": true
          },
          "approachId": {
            "type": "integer",
            "format": "int32"
          },
          "approachDescription": {
            "type": "string",
            "nullable": true
          },
          "phaseNumber": {
            "type": "integer",
            "format": "int32"
          },
          "phaseDescription": {
            "type": "string",
            "nullable": true
          },
          "totalDetectorHits": {
            "type": "number",
            "format": "double"
          },
          "totalArrivalOnRed": {
            "type": "number",
            "format": "double"
          },
          "percentArrivalOnRed": {
            "type": "number",
            "format": "double"
          },
          "plans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ArrivalOnRedPlan"
            },
            "nullable": true
          },
          "percentArrivalsOnRed": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataPointForDouble"
            },
            "nullable": true
          },
          "totalVehicles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataPointForDouble"
            },
            "nullable": true
          },
          "arrivalsOnRed": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataPointForDouble"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BarStack": {
        "type": "object",
        "properties": {
          "x": {
            "type": "integer",
            "format": "int32"
          },
          "y": {
            "type": "integer",
            "format": "int32"
          },
          "value": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "BinSize": {
        "enum": [0, 1, 2, 3, 4, 5],
        "type": "integer",
        "format": "int32"
      },
      "CycleEventsDto": {
        "type": "object",
        "properties": {
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "value": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "DataPointBase": {
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "DataPointForDetectorEvent": {
        "type": "object",
        "properties": {
          "detectorOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "detectorOff": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "value": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "DataPointForDouble": {
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "value": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "DataPointForInt": {
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "value": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "DateTimeInt32KeyValuePair": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "format": "date-time"
          },
          "value": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "DayOfWeek": {
        "enum": [0, 1, 2, 3, 4, 5, 6],
        "type": "integer",
        "format": "int32"
      },
      "DescriptionWithDataPoints": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataPointForDouble"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DetectionTypes": {
        "enum": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11],
        "type": "integer",
        "format": "int32"
      },
      "DetectorEventBase": {
        "type": "object",
        "properties": {
          "detectorOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "detectorOff": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DetectorEventDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DetectorEventBase"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FilterApproach": {
        "type": "object",
        "properties": {
          "approachId": {
            "type": "integer",
            "format": "int32"
          },
          "exclude": {
            "type": "boolean"
          },
          "detectors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FilterDetector"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FilterDetector": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "exclude": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "FilterDirection": {
        "type": "object",
        "properties": {
          "directionTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "include": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "FilterMovement": {
        "type": "object",
        "properties": {
          "movementTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "include": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "FilterSignal": {
        "type": "object",
        "properties": {
          "locationIdentifier": {
            "type": "string",
            "nullable": true
          },
          "exclude": {
            "type": "boolean"
          },
          "approaches": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FilterApproach"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GapDurationOptions": {
        "type": "object",
        "properties": {
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          },
          "approachId": {
            "type": "integer",
            "format": "int32"
          },
          "startHour": {
            "type": "integer",
            "format": "int32"
          },
          "startMinute": {
            "type": "integer",
            "format": "int32"
          },
          "endHour": {
            "type": "integer",
            "format": "int32"
          },
          "endMinute": {
            "type": "integer",
            "format": "int32"
          },
          "daysOfWeek": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "locationIdentifier": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GapDurationResult": {
        "type": "object",
        "properties": {
          "gapDurationPercent": {
            "type": "number",
            "format": "double"
          },
          "capacity": {
            "type": "number",
            "format": "double"
          },
          "demand": {
            "type": "number",
            "format": "double"
          },
          "acceptableGaps": {
            "type": "object",
            "additionalProperties": {
              "type": "number",
              "format": "double"
            },
            "nullable": true
          },
          "direction": {
            "type": "string",
            "nullable": true
          },
          "opposingDirection": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "GreenTimeUtilizationOptions": {
        "type": "object",
        "properties": {
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          },
          "metricTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "xAxisBinSize": {
            "type": "integer",
            "format": "int32"
          },
          "yAxisBinSize": {
            "type": "integer",
            "format": "int32"
          },
          "locationIdentifier": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GreenTimeUtilizationResult": {
        "type": "object",
        "properties": {
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          },
          "locationIdentifier": {
            "type": "string",
            "nullable": true
          },
          "locationDescription": {
            "type": "string",
            "nullable": true
          },
          "approachId": {
            "type": "integer",
            "format": "int32"
          },
          "approachDescription": {
            "type": "string",
            "nullable": true
          },
          "bins": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BarStack"
            },
            "nullable": true
          },
          "averageSplits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataPointForDouble"
            },
            "nullable": true
          },
          "programmedSplits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataPointForDouble"
            },
            "nullable": true
          },
          "phaseNumber": {
            "type": "integer",
            "format": "int32"
          },
          "yAxisBinSize": {
            "type": "integer",
            "format": "int32"
          },
          "xAxisBinSize": {
            "type": "integer",
            "format": "int32"
          },
          "plans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlanSplitMonitorData"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "Lane": {
        "type": "object",
        "properties": {
          "laneNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "movementType": {
            "type": "string",
            "nullable": true
          },
          "volume": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataPointForInt"
            },
            "nullable": true
          },
          "laneType": {
            "$ref": "#/components/schemas/LaneTypes"
          }
        },
        "additionalProperties": false
      },
      "LaneTypes": {
        "enum": [0, 1, 2, 3, 4, 5, 6, 7],
        "type": "integer",
        "format": "int32"
      },
      "LeftTurnGapAnalysisOptions": {
        "type": "object",
        "properties": {
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          },
          "gap1Min": {
            "type": "number",
            "format": "double"
          },
          "gap1Max": {
            "type": "number",
            "format": "double"
          },
          "gap2Min": {
            "type": "number",
            "format": "double"
          },
          "gap2Max": {
            "type": "number",
            "format": "double"
          },
          "gap3Min": {
            "type": "number",
            "format": "double"
          },
          "gap3Max": {
            "type": "number",
            "format": "double"
          },
          "gap4Min": {
            "type": "number",
            "format": "double"
          },
          "gap4Max": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "gap5Min": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "gap5Max": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "gap6Min": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "gap6Max": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "gap7Min": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "gap7Max": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "gap8Min": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "gap8Max": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "gap9Min": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "gap9Max": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "gap10Min": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "gap10Max": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "sumDurationGap1": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "sumDurationGap2": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "sumDurationGap3": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "trendLineGapThreshold": {
            "type": "number",
            "format": "double"
          },
          "binSize": {
            "type": "integer",
            "format": "int32"
          },
          "locationIdentifier": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LeftTurnGapAnalysisResult": {
        "type": "object",
        "properties": {
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          },
          "locationIdentifier": {
            "type": "string",
            "nullable": true
          },
          "locationDescription": {
            "type": "string",
            "nullable": true
          },
          "approachId": {
            "type": "integer",
            "format": "int32"
          },
          "approachDescription": {
            "type": "string",
            "nullable": true
          },
          "phaseNumber": {
            "type": "integer",
            "format": "int32"
          },
          "phaseDescription": {
            "type": "string",
            "nullable": true
          },
          "detectionTypeDescription": {
            "type": "string",
            "nullable": true
          },
          "gap1Min": {
            "type": "number",
            "format": "double"
          },
          "gap1Max": {
            "type": "number",
            "format": "double"
          },
          "gap1Count": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataPointForInt"
            },
            "nullable": true
          },
          "gap2Min": {
            "type": "number",
            "format": "double"
          },
          "gap2Max": {
            "type": "number",
            "format": "double"
          },
          "gap2Count": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataPointForInt"
            },
            "nullable": true
          },
          "gap3Min": {
            "type": "number",
            "format": "double"
          },
          "gap3Max": {
            "type": "number",
            "format": "double"
          },
          "gap3Count": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataPointForInt"
            },
            "nullable": true
          },
          "gap4Min": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "gap4Max": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "gap4Count": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataPointForInt"
            },
            "nullable": true
          },
          "gap5Min": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "gap5Max": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "gap5Count": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataPointForInt"
            },
            "nullable": true
          },
          "gap6Min": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "gap6Max": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "gap6Count": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataPointForInt"
            },
            "nullable": true
          },
          "gap7Min": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "gap7Max": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "gap7Count": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataPointForInt"
            },
            "nullable": true
          },
          "gap8Min": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "gap8Max": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "gap8Count": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataPointForInt"
            },
            "nullable": true
          },
          "gap9Min": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "gap9Max": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "gap9Count": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataPointForInt"
            },
            "nullable": true
          },
          "gap10Min": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "gap10Max": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "gap10Count": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataPointForInt"
            },
            "nullable": true
          },
          "gap11Min": {
            "type": "number",
            "format": "double",
            "nullable": true,
            "readOnly": true
          },
          "gap11Max": {
            "type": "number",
            "format": "double",
            "nullable": true,
            "readOnly": true
          },
          "gap11Count": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataPointForInt"
            },
            "nullable": true,
            "readOnly": true
          },
          "sumDuration1": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "sumDuration2": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "sumDuration3": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "sumGreenTime": {
            "type": "number",
            "format": "double"
          },
          "highestTotal": {
            "type": "integer",
            "format": "int32"
          },
          "detectionTypeStr": {
            "type": "string",
            "nullable": true
          },
          "trendLineGapThreshold": {
            "type": "number",
            "format": "double"
          },
          "binSize": {
            "type": "integer",
            "format": "int32"
          },
          "percentTurnableSeries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataPointForDouble"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LeftTurnGapDataCheckOptions": {
        "type": "object",
        "properties": {
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          },
          "approachId": {
            "type": "integer",
            "format": "int32"
          },
          "volumePerHourThreshold": {
            "type": "integer",
            "format": "int32"
          },
          "gapOutThreshold": {
            "type": "number",
            "format": "double"
          },
          "pedestrianThreshold": {
            "type": "number",
            "format": "double"
          },
          "daysOfWeek": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "locationIdentifier": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LeftTurnGapDataCheckResult": {
        "type": "object",
        "properties": {
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          },
          "locationIdentifier": {
            "type": "string",
            "nullable": true
          },
          "locationDescription": {
            "type": "string",
            "nullable": true
          },
          "approachId": {
            "type": "integer",
            "format": "int32"
          },
          "approachDescription": {
            "type": "string",
            "nullable": true
          },
          "leftTurnVolumeOk": {
            "type": "boolean"
          },
          "gapOutOk": {
            "type": "boolean"
          },
          "pedCycleOk": {
            "type": "boolean"
          },
          "insufficientDetectorEventCount": {
            "type": "boolean"
          },
          "insufficientCycleAggregation": {
            "type": "boolean"
          },
          "insufficientPhaseTermination": {
            "type": "boolean"
          },
          "insufficientPedAggregations": {
            "type": "boolean"
          },
          "insufficientSplitFailAggregations": {
            "type": "boolean"
          },
          "insufficientLeftTurnGapAggregations": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "LeftTurnGapReportOptions": {
        "type": "object",
        "properties": {
          "locationIdentifier": {
            "type": "string",
            "nullable": true
          },
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          },
          "approachIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "daysOfWeek": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "startHour": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "startMinute": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "endHour": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "endMinute": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "getAMPMPeakPeriod": {
            "type": "boolean"
          },
          "getAMPMPeakHour": {
            "type": "boolean"
          },
          "get24HourPeriod": {
            "type": "boolean"
          },
          "getGapReport": {
            "type": "boolean"
          },
          "acceptableGapPercentage": {
            "type": "number",
            "format": "double"
          },
          "getSplitFail": {
            "type": "boolean"
          },
          "acceptableSplitFailPercentage": {
            "type": "number",
            "format": "double"
          },
          "getPedestrianCall": {
            "type": "boolean"
          },
          "getConflictingVolume": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "LeftTurnGapReportResult": {
        "type": "object",
        "properties": {
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "approachDescription": {
            "type": "string",
            "nullable": true
          },
          "signalId": {
            "type": "string",
            "nullable": true
          },
          "location": {
            "type": "string",
            "nullable": true
          },
          "get24HourPeriod": {
            "type": "boolean"
          },
          "phaseType": {
            "type": "string",
            "nullable": true
          },
          "signalType": {
            "type": "string",
            "nullable": true
          },
          "speedLimit": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "peakPeriodDescription": {
            "type": "string",
            "nullable": true
          },
          "startTime": {
            "type": "string",
            "format": "date-span"
          },
          "endTime": {
            "type": "string",
            "format": "date-span"
          },
          "cyclesWithSplitFailNum": {
            "type": "integer",
            "format": "int32"
          },
          "cyclesWithSplitFailPercent": {
            "type": "number",
            "format": "double"
          },
          "cyclesWithPedCallNum": {
            "type": "integer",
            "format": "int32"
          },
          "cyclesWithPedCallPercent": {
            "type": "number",
            "format": "double"
          },
          "crossProductValue": {
            "type": "number",
            "format": "double"
          },
          "calculatedVolumeBoundary": {
            "type": "number",
            "format": "double"
          },
          "gapDurationConsiderForStudy": {
            "type": "boolean",
            "nullable": true
          },
          "splitFailsConsiderForStudy": {
            "type": "boolean",
            "nullable": true
          },
          "pedActuationsConsiderForStudy": {
            "type": "boolean",
            "nullable": true
          },
          "volumesConsiderForStudy": {
            "type": "boolean",
            "nullable": true
          },
          "capacity": {
            "type": "number",
            "format": "double"
          },
          "demand": {
            "type": "number",
            "format": "double"
          },
          "vcRatio": {
            "type": "number",
            "format": "double"
          },
          "gapOutPercent": {
            "type": "number",
            "format": "double"
          },
          "opposingLanes": {
            "type": "integer",
            "format": "int32"
          },
          "crossProductReview": {
            "type": "boolean"
          },
          "decisionBoundariesReview": {
            "type": "boolean"
          },
          "leftTurnVolume": {
            "type": "number",
            "format": "double"
          },
          "opposingThroughVolume": {
            "type": "number",
            "format": "double"
          },
          "crossProductConsiderForStudy": {
            "type": "boolean",
            "nullable": true
          },
          "acceptableGapList": {
            "type": "object",
            "additionalProperties": {
              "type": "number",
              "format": "double"
            },
            "nullable": true
          },
          "percentCyclesWithPedsList": {
            "type": "object",
            "additionalProperties": {
              "type": "number",
              "format": "double"
            },
            "nullable": true
          },
          "demandList": {
            "type": "object",
            "additionalProperties": {
              "type": "number",
              "format": "double"
            },
            "nullable": true
          },
          "percentCyclesWithSplitFailList": {
            "type": "object",
            "additionalProperties": {
              "type": "number",
              "format": "double"
            },
            "nullable": true
          },
          "direction": {
            "type": "string",
            "nullable": true
          },
          "opposingDirection": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LeftTurnSplitFailOptions": {
        "type": "object",
        "properties": {
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          },
          "approachId": {
            "type": "integer",
            "format": "int32"
          },
          "startHour": {
            "type": "integer",
            "format": "int32"
          },
          "startMinute": {
            "type": "integer",
            "format": "int32"
          },
          "endHour": {
            "type": "integer",
            "format": "int32"
          },
          "endMinute": {
            "type": "integer",
            "format": "int32"
          },
          "daysOfWeek": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "locationIdentifier": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LeftTurnSplitFailResult": {
        "type": "object",
        "properties": {
          "splitFailPercent": {
            "type": "number",
            "format": "double"
          },
          "cyclesWithSplitFails": {
            "type": "integer",
            "format": "int32"
          },
          "percentCyclesWithSplitFailList": {
            "type": "object",
            "additionalProperties": {
              "type": "number",
              "format": "double"
            },
            "nullable": true,
            "readOnly": true
          },
          "direction": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LinkPivotAdjustment": {
        "type": "object",
        "properties": {
          "linkNumber": {
            "type": "integer",
            "format": "int32"
          },
          "locationIdentifier": {
            "type": "string",
            "nullable": true
          },
          "location": {
            "type": "string",
            "nullable": true
          },
          "delta": {
            "type": "integer",
            "format": "int32"
          },
          "adjustment": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "LinkPivotApproachLink": {
        "type": "object",
        "properties": {
          "locationIdentifier": {
            "type": "string",
            "nullable": true
          },
          "location": {
            "type": "string",
            "nullable": true
          },
          "upstreamApproachDirection": {
            "type": "string",
            "nullable": true
          },
          "downstreamLocationIdentifier": {
            "type": "string",
            "nullable": true
          },
          "downstreamLocation": {
            "type": "string",
            "nullable": true
          },
          "downstreamApproachDirection": {
            "type": "string",
            "nullable": true
          },
          "paogUpstreamBefore": {
            "type": "integer",
            "format": "int32"
          },
          "paogUpstreamPredicted": {
            "type": "integer",
            "format": "int32"
          },
          "paogDownstreamBefore": {
            "type": "integer",
            "format": "int32"
          },
          "paogDownstreamPredicted": {
            "type": "integer",
            "format": "int32"
          },
          "aogUpstreamBefore": {
            "type": "number",
            "format": "double"
          },
          "aogUpstreamPredicted": {
            "type": "number",
            "format": "double"
          },
          "aogDownstreamBefore": {
            "type": "number",
            "format": "double"
          },
          "aogDownstreamPredicted": {
            "type": "number",
            "format": "double"
          },
          "delta": {
            "type": "number",
            "format": "double"
          },
          "resultChartLocation": {
            "type": "string",
            "nullable": true
          },
          "upstreamCombinedLocation": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "downstreamCombinedLocation": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "aogTotalBefore": {
            "type": "number",
            "format": "double"
          },
          "pAogTotalBefore": {
            "type": "integer",
            "format": "int32"
          },
          "aogTotalPredicted": {
            "type": "number",
            "format": "double"
          },
          "pAogTotalPredicted": {
            "type": "integer",
            "format": "int32"
          },
          "totalChartExisting": {
            "type": "number",
            "format": "double"
          },
          "totalChartPositiveChange": {
            "type": "integer",
            "format": "int32"
          },
          "totalChartNegativeChange": {
            "type": "integer",
            "format": "int32"
          },
          "totalChartRemaining": {
            "type": "number",
            "format": "double"
          },
          "upstreamChartExisting": {
            "type": "integer",
            "format": "int32"
          },
          "upstreamChartPositiveChange": {
            "type": "integer",
            "format": "int32"
          },
          "upstreamChartNegativeChange": {
            "type": "integer",
            "format": "int32"
          },
          "upstreamChartRemaining": {
            "type": "integer",
            "format": "int32"
          },
          "downstreamChartExisting": {
            "type": "integer",
            "format": "int32"
          },
          "downstreamChartPositiveChange": {
            "type": "integer",
            "format": "int32"
          },
          "downstreamChartNegativeChange": {
            "type": "integer",
            "format": "int32"
          },
          "downstreamChartRemaining": {
            "type": "integer",
            "format": "int32"
          },
          "totalChartName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "upstreamChartName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "downstreamChartName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "linkNumber": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "LinkPivotOptions": {
        "type": "object",
        "properties": {
          "routeId": {
            "type": "integer",
            "format": "int32"
          },
          "cycleLength": {
            "type": "integer",
            "format": "int32"
          },
          "direction": {
            "type": "string",
            "nullable": true
          },
          "bias": {
            "type": "number",
            "format": "double"
          },
          "biasDirection": {
            "type": "string",
            "nullable": true
          },
          "daysOfWeek": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date"
          },
          "endDate": {
            "type": "string",
            "format": "date"
          },
          "startTime": {
            "type": "string",
            "format": "time"
          },
          "endTime": {
            "type": "string",
            "format": "time"
          }
        },
        "additionalProperties": false
      },
      "LinkPivotPcdOptions": {
        "required": ["delta"],
        "type": "object",
        "properties": {
          "locationIdentifier": {
            "type": "string",
            "nullable": true
          },
          "downstreamLocationIdentifier": {
            "type": "string",
            "nullable": true
          },
          "delta": {
            "type": "integer",
            "format": "int32"
          },
          "downstreamApproachDirection": {
            "type": "string",
            "nullable": true
          },
          "upstreamApproachDirection": {
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date"
          },
          "selectedEndDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "startTime": {
            "type": "string",
            "format": "time"
          },
          "endTime": {
            "type": "string",
            "format": "time"
          },
          "endDate": {
            "type": "string",
            "format": "date"
          }
        },
        "additionalProperties": false
      },
      "LinkPivotPcdResult": {
        "type": "object",
        "properties": {
          "existingTotalAOG": {
            "type": "number",
            "format": "double"
          },
          "existingTotalPAOG": {
            "type": "number",
            "format": "double"
          },
          "predictedTotalAOG": {
            "type": "number",
            "format": "double"
          },
          "predictedTotalPAOG": {
            "type": "number",
            "format": "double"
          },
          "predictedVolume": {
            "type": "number",
            "format": "double"
          },
          "existingVolume": {
            "type": "number",
            "format": "double"
          },
          "pcdExisting": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PurdueCoordinationDiagramResult"
            },
            "nullable": true
          },
          "pcdPredicted": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PurdueCoordinationDiagramResult"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LinkPivotResult": {
        "type": "object",
        "properties": {
          "adjustments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LinkPivotAdjustment"
            },
            "nullable": true
          },
          "approachLinks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LinkPivotApproachLink"
            },
            "nullable": true
          },
          "totalAogDownstreamBefore": {
            "type": "number",
            "format": "double"
          },
          "totalPaogDownstreamBefore": {
            "type": "integer",
            "format": "int32"
          },
          "totalAogDownstreamPredicted": {
            "type": "number",
            "format": "double"
          },
          "totalPaogDownstreamPredicted": {
            "type": "integer",
            "format": "int32"
          },
          "totalAogUpstreamBefore": {
            "type": "number",
            "format": "double"
          },
          "totalPaogUpstreamBefore": {
            "type": "integer",
            "format": "int32"
          },
          "totalAogUpstreamPredicted": {
            "type": "number",
            "format": "double"
          },
          "totalPaogUpstreamPredicted": {
            "type": "integer",
            "format": "int32"
          },
          "totalAogBefore": {
            "type": "number",
            "format": "double"
          },
          "totalPaogBefore": {
            "type": "integer",
            "format": "int32"
          },
          "totalAogPredicted": {
            "type": "number",
            "format": "double"
          },
          "totalPaogPredicted": {
            "type": "integer",
            "format": "int32"
          },
          "totalChartExisting": {
            "type": "integer",
            "format": "int32"
          },
          "totalChartPositiveChange": {
            "type": "integer",
            "format": "int32"
          },
          "totalChartNegativeChange": {
            "type": "integer",
            "format": "int32"
          },
          "totalChartRemaining": {
            "type": "integer",
            "format": "int32"
          },
          "totalUpstreamChartExisting": {
            "type": "integer",
            "format": "int32"
          },
          "totalUpstreamChartPositiveChange": {
            "type": "integer",
            "format": "int32"
          },
          "totalUpstreamChartNegativeChange": {
            "type": "integer",
            "format": "int32"
          },
          "totalUpstreamChartRemaining": {
            "type": "integer",
            "format": "int32"
          },
          "totalDownstreamChartExisting": {
            "type": "integer",
            "format": "int32"
          },
          "totalDownstreamChartPositiveChange": {
            "type": "integer",
            "format": "int32"
          },
          "totalDownstreamChartNegativeChange": {
            "type": "integer",
            "format": "int32"
          },
          "totalDownstreamChartRemaining": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "LocationPhases": {
        "type": "object",
        "properties": {
          "locationIdentifier": {
            "type": "string",
            "nullable": true
          },
          "designatedPhases": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LocationWithCoordPhases": {
        "type": "object",
        "properties": {
          "locationIdentifier": {
            "type": "string",
            "nullable": true
          },
          "coordinatedPhases": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LocationWithSequence": {
        "type": "object",
        "properties": {
          "locationIdentifier": {
            "type": "string",
            "nullable": true
          },
          "sequence": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PeakHourOptions": {
        "type": "object",
        "properties": {
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          },
          "approachId": {
            "type": "integer",
            "format": "int32"
          },
          "daysOfWeek": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "locationIdentifier": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PeakHourResult": {
        "type": "object",
        "properties": {
          "amStartHour": {
            "type": "integer",
            "format": "int32"
          },
          "amEndHour": {
            "type": "integer",
            "format": "int32"
          },
          "amStartMinute": {
            "type": "integer",
            "format": "int32"
          },
          "amEndMinute": {
            "type": "integer",
            "format": "int32"
          },
          "pmStartHour": {
            "type": "integer",
            "format": "int32"
          },
          "pmEndHour": {
            "type": "integer",
            "format": "int32"
          },
          "pmStartMinute": {
            "type": "integer",
            "format": "int32"
          },
          "pmEndMinute": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PedActuationOptions": {
        "type": "object",
        "properties": {
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          },
          "approachId": {
            "type": "integer",
            "format": "int32"
          },
          "startHour": {
            "type": "integer",
            "format": "int32"
          },
          "startMinute": {
            "type": "integer",
            "format": "int32"
          },
          "endHour": {
            "type": "integer",
            "format": "int32"
          },
          "endMinute": {
            "type": "integer",
            "format": "int32"
          },
          "daysOfWeek": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "locationIdentifier": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PedActuationResult": {
        "type": "object",
        "properties": {
          "cyclesWithPedCallsNum": {
            "type": "integer",
            "format": "int32"
          },
          "cyclesWithPedCallsPercent": {
            "type": "number",
            "format": "double"
          },
          "percentCyclesWithPedsList": {
            "type": "object",
            "additionalProperties": {
              "type": "number",
              "format": "double"
            },
            "nullable": true
          },
          "direction": {
            "type": "string",
            "nullable": true
          },
          "opposingDirection": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PedDelayOptions": {
        "type": "object",
        "properties": {
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          },
          "timeBuffer": {
            "type": "integer",
            "format": "int32"
          },
          "showPedBeginWalk": {
            "type": "boolean"
          },
          "showCycleLength": {
            "type": "boolean"
          },
          "showPercentDelay": {
            "type": "boolean"
          },
          "showPedRecall": {
            "type": "boolean"
          },
          "pedRecallThreshold": {
            "type": "integer",
            "format": "int32"
          },
          "locationIdentifier": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PedDelayPlan": {
        "type": "object",
        "properties": {
          "planNumber": {
            "type": "string",
            "nullable": true
          },
          "start": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "end": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "planDescription": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "pedRecallMessage": {
            "type": "string",
            "nullable": true
          },
          "cyclesWithPedRequests": {
            "type": "integer",
            "format": "int32"
          },
          "uniquePedDetections": {
            "type": "integer",
            "format": "int32"
          },
          "pedPresses": {
            "type": "integer",
            "format": "int32"
          },
          "averageDelaySeconds": {
            "type": "number",
            "format": "double"
          },
          "averageCycleLengthSeconds": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "PedDelayResult": {
        "type": "object",
        "properties": {
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          },
          "locationIdentifier": {
            "type": "string",
            "nullable": true
          },
          "locationDescription": {
            "type": "string",
            "nullable": true
          },
          "approachId": {
            "type": "integer",
            "format": "int32"
          },
          "approachDescription": {
            "type": "string",
            "nullable": true
          },
          "phaseNumber": {
            "type": "integer",
            "format": "int32"
          },
          "phaseDescription": {
            "type": "string",
            "nullable": true
          },
          "pedPresses": {
            "type": "integer",
            "format": "int32"
          },
          "cyclesWithPedRequests": {
            "type": "number",
            "format": "double"
          },
          "timeBuffered": {
            "type": "integer",
            "format": "int32"
          },
          "uniquePedestrianDetections": {
            "type": "integer",
            "format": "int32"
          },
          "minDelay": {
            "type": "number",
            "format": "double"
          },
          "maxDelay": {
            "type": "number",
            "format": "double"
          },
          "averageDelay": {
            "type": "number",
            "format": "double"
          },
          "plans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PedDelayPlan"
            },
            "nullable": true
          },
          "cycleLengths": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataPointForDouble"
            },
            "nullable": true
          },
          "pedestrianDelay": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataPointForDouble"
            },
            "nullable": true
          },
          "startOfWalk": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataPointForDouble"
            },
            "nullable": true
          },
          "percentDelayByCycleLength": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataPointForDouble"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PerdueCoordinationPlanViewModel": {
        "type": "object",
        "properties": {
          "planNumber": {
            "type": "string",
            "nullable": true
          },
          "start": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "end": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "planDescription": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "percentGreenTime": {
            "type": "number",
            "format": "double"
          },
          "percentArrivalOnGreen": {
            "type": "number",
            "format": "double"
          },
          "platoonRatio": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Phase": {
        "type": "object",
        "properties": {
          "phaseNumber": {
            "type": "integer",
            "format": "int32"
          },
          "gapOuts": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date-time"
            },
            "nullable": true
          },
          "maxOuts": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date-time"
            },
            "nullable": true
          },
          "forceOffs": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date-time"
            },
            "nullable": true
          },
          "pedWalkBegins": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date-time"
            },
            "nullable": true
          },
          "unknownTerminations": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date-time"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PhaseTerminationResult": {
        "type": "object",
        "properties": {
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          },
          "locationIdentifier": {
            "type": "string",
            "nullable": true
          },
          "locationDescription": {
            "type": "string",
            "nullable": true
          },
          "consecutiveCount": {
            "type": "integer",
            "format": "int32"
          },
          "plans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Plan"
            },
            "nullable": true
          },
          "phases": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Phase"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Plan": {
        "type": "object",
        "properties": {
          "planNumber": {
            "type": "string",
            "nullable": true
          },
          "start": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "end": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "planDescription": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "PlanSplitFail": {
        "type": "object",
        "properties": {
          "planNumber": {
            "type": "string",
            "nullable": true
          },
          "start": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "end": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "planDescription": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "totalCycles": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "failsInPlan": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "percentFails": {
            "type": "number",
            "format": "double",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "PlanSplitMonitorDTO": {
        "type": "object",
        "properties": {
          "planNumber": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "planDescription": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "start": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "end": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "percentSkips": {
            "type": "number",
            "format": "double"
          },
          "percentGapOuts": {
            "type": "number",
            "format": "double"
          },
          "percentMaxOuts": {
            "type": "number",
            "format": "double"
          },
          "percentForceOffs": {
            "type": "number",
            "format": "double"
          },
          "averageSplit": {
            "type": "number",
            "format": "double"
          },
          "percentileSplit": {
            "type": "number",
            "format": "double"
          },
          "minTime": {
            "type": "number",
            "format": "double"
          },
          "programmedSplit": {
            "type": "number",
            "format": "double"
          },
          "percentileSplit85th": {
            "type": "number",
            "format": "double"
          },
          "percentileSplit50th": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "PlanSplitMonitorData": {
        "type": "object",
        "properties": {
          "planNumber": {
            "type": "string",
            "nullable": true
          },
          "start": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "end": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "planDescription": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "splits": {
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "cycleLength": {
            "type": "integer",
            "format": "int32"
          },
          "offsetLength": {
            "type": "integer",
            "format": "int32"
          },
          "highCycleCount": {
            "type": "integer",
            "format": "int32"
          },
          "percentSkips": {
            "type": "number",
            "format": "double"
          },
          "percentGapOuts": {
            "type": "number",
            "format": "double"
          },
          "percentMaxOuts": {
            "type": "number",
            "format": "double"
          },
          "percentForceOffs": {
            "type": "number",
            "format": "double"
          },
          "averageSplit": {
            "type": "number",
            "format": "double"
          },
          "percentileSplit": {
            "type": "number",
            "format": "double"
          },
          "minTime": {
            "type": "number",
            "format": "double"
          },
          "programmedSplit": {
            "type": "number",
            "format": "double"
          },
          "percentileSplit85th": {
            "type": "number",
            "format": "double"
          },
          "percentileSplit50th": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "PlanWaitTime": {
        "type": "object",
        "properties": {
          "planNumber": {
            "type": "string",
            "nullable": true
          },
          "start": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "end": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "planDescription": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "averageWaitTime": {
            "type": "number",
            "format": "double"
          },
          "maxWaitTime": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "PreemptCycleResult": {
        "type": "object",
        "properties": {
          "inputOff": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "inputOn": {
            "type": "string",
            "format": "date-time"
          },
          "gateDown": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "callMaxOut": {
            "type": "number",
            "format": "double"
          },
          "delay": {
            "type": "number",
            "format": "double"
          },
          "timeToService": {
            "type": "number",
            "format": "double"
          },
          "dwellTime": {
            "type": "number",
            "format": "double"
          },
          "trackClear": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "PreemptDetail": {
        "type": "object",
        "properties": {
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          },
          "locationIdentifier": {
            "type": "string",
            "nullable": true
          },
          "locationDescription": {
            "type": "string",
            "nullable": true
          },
          "preemptionNumber": {
            "type": "integer",
            "format": "int32"
          },
          "cycles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PreemptCycleResult"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "PreemptDetailOptions": {
        "type": "object",
        "properties": {
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          },
          "locationIdentifier": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PreemptDetailResult": {
        "type": "object",
        "properties": {
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PreemptDetail"
            },
            "nullable": true
          },
          "summary": {
            "$ref": "#/components/schemas/PreemptRequestAndServices"
          }
        },
        "additionalProperties": false
      },
      "PreemptPlan": {
        "type": "object",
        "properties": {
          "planNumber": {
            "type": "string",
            "nullable": true
          },
          "start": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "end": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "planDescription": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "preemptCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PreemptRequestAndServices": {
        "type": "object",
        "properties": {
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          },
          "locationIdentifier": {
            "type": "string",
            "nullable": true
          },
          "locationDescription": {
            "type": "string",
            "nullable": true
          },
          "requestAndServices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RequestAndServices"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PreemptServiceOptions": {
        "type": "object",
        "properties": {
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          },
          "locationIdentifier": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PreemptServiceRequestOptions": {
        "type": "object",
        "properties": {
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          },
          "locationIdentifier": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PreemptServiceRequestResult": {
        "type": "object",
        "properties": {
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          },
          "locationIdentifier": {
            "type": "string",
            "nullable": true
          },
          "locationDescription": {
            "type": "string",
            "nullable": true
          },
          "plans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Plan"
            },
            "nullable": true
          },
          "preemptRequests": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataPointForInt"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PreemptServiceResult": {
        "type": "object",
        "properties": {
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          },
          "locationIdentifier": {
            "type": "string",
            "nullable": true
          },
          "locationDescription": {
            "type": "string",
            "nullable": true
          },
          "plans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PreemptPlan"
            },
            "nullable": true
          },
          "preemptServiceEvents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataPointForInt"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": {}
      },
      "PurdueCoordinationDiagramOptions": {
        "type": "object",
        "properties": {
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          },
          "binSize": {
            "type": "integer",
            "format": "int32"
          },
          "getVolume": {
            "type": "boolean"
          },
          "showPlanStatistics": {
            "type": "boolean"
          },
          "locationIdentifier": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PurdueCoordinationDiagramResult": {
        "type": "object",
        "properties": {
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          },
          "locationIdentifier": {
            "type": "string",
            "nullable": true
          },
          "locationDescription": {
            "type": "string",
            "nullable": true
          },
          "approachId": {
            "type": "integer",
            "format": "int32"
          },
          "approachDescription": {
            "type": "string",
            "nullable": true
          },
          "phaseNumber": {
            "type": "integer",
            "format": "int32"
          },
          "phaseDescription": {
            "type": "string",
            "nullable": true
          },
          "totalOnGreenEvents": {
            "type": "integer",
            "format": "int32"
          },
          "totalDetectorHits": {
            "type": "integer",
            "format": "int32"
          },
          "percentArrivalOnGreen": {
            "type": "number",
            "format": "double"
          },
          "plans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PerdueCoordinationPlanViewModel"
            },
            "nullable": true
          },
          "volumePerHour": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataPointForDouble"
            },
            "nullable": true
          },
          "redSeries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataPointForDouble"
            },
            "nullable": true
          },
          "yellowSeries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataPointForDouble"
            },
            "nullable": true
          },
          "greenSeries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataPointForDouble"
            },
            "nullable": true
          },
          "detectorEvents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataPointForDouble"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PurduePhaseTerminationOptions": {
        "type": "object",
        "properties": {
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          },
          "selectedConsecutiveCount": {
            "type": "integer",
            "format": "int32"
          },
          "selectedPhaseNumber": {
            "type": "integer",
            "format": "int32"
          },
          "locationIdentifier": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RampMeteringOptions": {
        "type": "object",
        "properties": {
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          },
          "combineLanes": {
            "type": "boolean"
          },
          "locationIdentifier": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RampMeteringResult": {
        "type": "object",
        "properties": {
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          },
          "locationIdentifier": {
            "type": "string",
            "nullable": true
          },
          "locationDescription": {
            "type": "string",
            "nullable": true
          },
          "mainlineAvgFlow": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataPointForDouble"
            },
            "nullable": true
          },
          "mainlineAvgOcc": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataPointForDouble"
            },
            "nullable": true
          },
          "mainlineAvgSpeed": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataPointForDouble"
            },
            "nullable": true
          },
          "startUpWarning": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TimeSpaceEventBase"
            },
            "nullable": true
          },
          "shutdownWarning": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TimeSpaceEventBase"
            },
            "nullable": true
          },
          "lanesActiveRate": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DescriptionWithDataPoints"
            },
            "nullable": true
          },
          "lanesBaseRate": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DescriptionWithDataPoints"
            },
            "nullable": true
          },
          "lanesQueueOnAndOffEvents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataPointForDetectorEvent"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RequestAndServices": {
        "type": "object",
        "properties": {
          "preemptionNumber": {
            "type": "integer",
            "format": "int32"
          },
          "requests": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "services": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Series": {
        "type": "object",
        "properties": {
          "identifier": {
            "type": "string",
            "nullable": true
          },
          "dataPoints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AggregationDataPoint"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SeriesType": {
        "enum": [0, 1, 2, 3, 4],
        "type": "integer",
        "format": "int32"
      },
      "SpeedPlan": {
        "type": "object",
        "properties": {
          "planNumber": {
            "type": "string",
            "nullable": true
          },
          "start": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "end": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "planDescription": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "averageSpeed": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "standardDeviation": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "eightyFifthPercentile": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fifteenthPercentile": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SplitFailOptions": {
        "type": "object",
        "properties": {
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          },
          "firstSecondsOfRed": {
            "type": "integer",
            "format": "int32"
          },
          "metricTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "getPermissivePhase": {
            "type": "boolean"
          },
          "locationIdentifier": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SplitFailsResult": {
        "type": "object",
        "properties": {
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          },
          "locationIdentifier": {
            "type": "string",
            "nullable": true
          },
          "locationDescription": {
            "type": "string",
            "nullable": true
          },
          "approachId": {
            "type": "integer",
            "format": "int32"
          },
          "approachDescription": {
            "type": "string",
            "nullable": true
          },
          "phaseNumber": {
            "type": "integer",
            "format": "int32"
          },
          "phaseType": {
            "type": "string",
            "nullable": true
          },
          "totalSplitFails": {
            "type": "integer",
            "format": "int32"
          },
          "plans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlanSplitFail"
            },
            "nullable": true
          },
          "failLines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataPointBase"
            },
            "nullable": true
          },
          "gapOutGreenOccupancies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataPointForDouble"
            },
            "nullable": true
          },
          "gapOutRedOccupancies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataPointForDouble"
            },
            "nullable": true
          },
          "forceOffGreenOccupancies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataPointForDouble"
            },
            "nullable": true
          },
          "forceOffRedOccupancies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataPointForDouble"
            },
            "nullable": true
          },
          "averageGor": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataPointForDouble"
            },
            "nullable": true
          },
          "averageRor": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataPointForDouble"
            },
            "nullable": true
          },
          "percentFails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataPointForDouble"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SplitMonitorOptions": {
        "type": "object",
        "properties": {
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          },
          "percentileSplit": {
            "type": "integer",
            "format": "int32"
          },
          "locationIdentifier": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SplitMonitorResult": {
        "type": "object",
        "properties": {
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          },
          "locationIdentifier": {
            "type": "string",
            "nullable": true
          },
          "locationDescription": {
            "type": "string",
            "nullable": true
          },
          "phaseNumber": {
            "type": "integer",
            "format": "int32"
          },
          "percentileSplit": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "phaseDescription": {
            "type": "string",
            "nullable": true
          },
          "plans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlanSplitMonitorDTO"
            },
            "nullable": true,
            "readOnly": true
          },
          "programmedSplits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataPointForDouble"
            },
            "nullable": true,
            "readOnly": true
          },
          "gapOuts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataPointForDouble"
            },
            "nullable": true,
            "readOnly": true
          },
          "maxOuts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataPointForDouble"
            },
            "nullable": true,
            "readOnly": true
          },
          "forceOffs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataPointForDouble"
            },
            "nullable": true,
            "readOnly": true
          },
          "unknowns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataPointForDouble"
            },
            "nullable": true,
            "readOnly": true
          },
          "peds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataPointForDouble"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SummaryData": {
        "type": "object",
        "properties": {
          "peakHour": {
            "type": "string",
            "nullable": true
          },
          "kFactor": {
            "type": "number",
            "format": "double"
          },
          "peakHourVolume": {
            "type": "integer",
            "format": "int32"
          },
          "peakHourFactor": {
            "type": "number",
            "format": "double"
          },
          "totalVolume": {
            "type": "integer",
            "format": "int32"
          },
          "primaryPeakHour": {
            "type": "string",
            "nullable": true
          },
          "primaryKFactor": {
            "type": "number",
            "format": "double"
          },
          "primaryPeakHourVolume": {
            "type": "integer",
            "format": "int32"
          },
          "primaryPeakHourFactor": {
            "type": "number",
            "format": "double"
          },
          "primaryTotalVolume": {
            "type": "integer",
            "format": "int32"
          },
          "primaryDFactor": {
            "type": "number",
            "format": "double"
          },
          "opposingPeakHour": {
            "type": "string",
            "nullable": true
          },
          "opposingKFactor": {
            "type": "number",
            "format": "double"
          },
          "opposingPeakHourVolume": {
            "type": "integer",
            "format": "int32"
          },
          "opposingPeakHourFactor": {
            "type": "number",
            "format": "double"
          },
          "opposingTotalVolume": {
            "type": "integer",
            "format": "int32"
          },
          "opposingDFactor": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "TimeOptions": {
        "type": "object",
        "properties": {
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          },
          "timeOfDayStartHour": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "timeOfDayStartMinute": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "timeOfDayEndHour": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "timeOfDayEndMinute": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "daysOfWeek": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DayOfWeek"
            },
            "nullable": true
          },
          "timeOption": {
            "$ref": "#/components/schemas/TimePeriodOptions"
          },
          "selectedBinSize": {
            "$ref": "#/components/schemas/BinSize"
          }
        },
        "additionalProperties": false
      },
      "TimePeriodOptions": {
        "enum": [0, 1],
        "type": "integer",
        "format": "int32"
      },
      "TimeSpaceDiagramAverageOptions": {
        "type": "object",
        "properties": {
          "routeId": {
            "type": "integer",
            "format": "int32"
          },
          "startDate": {
            "type": "string",
            "format": "date"
          },
          "endDate": {
            "type": "string",
            "format": "date"
          },
          "startTime": {
            "type": "string",
            "format": "time"
          },
          "endTime": {
            "type": "string",
            "format": "time"
          },
          "sequence": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocationWithSequence"
            },
            "nullable": true
          },
          "coordinatedPhases": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocationWithCoordPhases"
            },
            "nullable": true
          },
          "daysOfWeek": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "speedLimit": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TimeSpaceDiagramAverageResult": {
        "type": "object",
        "properties": {
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          },
          "locationIdentifier": {
            "type": "string",
            "nullable": true
          },
          "locationDescription": {
            "type": "string",
            "nullable": true
          },
          "approachId": {
            "type": "integer",
            "format": "int32"
          },
          "approachDescription": {
            "type": "string",
            "nullable": true
          },
          "coordinatedPhases": {
            "type": "boolean"
          },
          "phaseNumber": {
            "type": "integer",
            "format": "int32"
          },
          "speed": {
            "type": "integer",
            "format": "int32"
          },
          "offset": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "programmedSplit": {
            "type": "integer",
            "format": "int32"
          },
          "phaseType": {
            "type": "string",
            "nullable": true
          },
          "cycleLength": {
            "type": "integer",
            "format": "int32"
          },
          "phaseNumberSort": {
            "type": "string",
            "nullable": true
          },
          "distanceToNextLocation": {
            "type": "number",
            "format": "double"
          },
          "cycleAllEvents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CycleEventsDto"
            },
            "nullable": true
          },
          "greenTimeEvents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TimeSpaceEventBase"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TimeSpaceDiagramOptions": {
        "type": "object",
        "properties": {
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          },
          "extendStartStopSearch": {
            "type": "number",
            "format": "double"
          },
          "showAllLanesInfo": {
            "type": "boolean"
          },
          "locationIdentifier": {
            "type": "string",
            "nullable": true
          },
          "routeId": {
            "type": "integer",
            "format": "int32"
          },
          "speedLimit": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TimeSpaceDiagramResultForPhase": {
        "type": "object",
        "properties": {
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          },
          "locationIdentifier": {
            "type": "string",
            "nullable": true
          },
          "locationDescription": {
            "type": "string",
            "nullable": true
          },
          "approachId": {
            "type": "integer",
            "format": "int32"
          },
          "approachDescription": {
            "type": "string",
            "nullable": true
          },
          "phaseNumber": {
            "type": "integer",
            "format": "int32"
          },
          "speed": {
            "type": "integer",
            "format": "int32"
          },
          "phaseType": {
            "type": "string",
            "nullable": true
          },
          "phaseNumberSort": {
            "type": "string",
            "nullable": true
          },
          "distanceToNextLocation": {
            "type": "number",
            "format": "double"
          },
          "cycleAllEvents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CycleEventsDto"
            },
            "nullable": true
          },
          "greenTimeEvents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TimeSpaceEventBase"
            },
            "nullable": true
          },
          "laneByLaneCountDetectors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TimeSpaceEventBase"
            },
            "nullable": true
          },
          "advanceCountDetectors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TimeSpaceEventBase"
            },
            "nullable": true
          },
          "stopBarPresenceDetectors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TimeSpaceEventBase"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TimeSpaceEventBase": {
        "type": "object",
        "properties": {
          "initialX": {
            "type": "string",
            "format": "date-time"
          },
          "finalX": {
            "type": "string",
            "format": "date-time"
          },
          "isDetectorOn": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TimingAndActuationsForPhaseResult": {
        "type": "object",
        "properties": {
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          },
          "locationIdentifier": {
            "type": "string",
            "nullable": true
          },
          "locationDescription": {
            "type": "string",
            "nullable": true
          },
          "approachId": {
            "type": "integer",
            "format": "int32"
          },
          "approachDescription": {
            "type": "string",
            "nullable": true
          },
          "phaseNumber": {
            "type": "integer",
            "format": "int32"
          },
          "isPhaseOverLap": {
            "type": "boolean"
          },
          "phaseNumberSort": {
            "type": "string",
            "nullable": true
          },
          "phaseType": {
            "type": "string",
            "nullable": true
          },
          "pedestrianIntervals": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CycleEventsDto"
            },
            "nullable": true
          },
          "pedestrianEvents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DetectorEventDto"
            },
            "nullable": true
          },
          "cycleAllEvents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CycleEventsDto"
            },
            "nullable": true
          },
          "advanceCountDetectors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DetectorEventDto"
            },
            "nullable": true
          },
          "advancePresenceDetectors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DetectorEventDto"
            },
            "nullable": true
          },
          "stopBarDetectors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DetectorEventDto"
            },
            "nullable": true
          },
          "laneByLanesDetectors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DetectorEventDto"
            },
            "nullable": true
          },
          "phaseCustomEvents": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/DataPointForInt"
              },
              "nullable": true
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TimingAndActuationsOptions": {
        "type": "object",
        "properties": {
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          },
          "locationIdentifier": {
            "type": "string",
            "nullable": true
          },
          "globalEventCodesList": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "globalEventParamsList": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "phaseEventCodesList": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TransitSignalPhase": {
        "type": "object",
        "properties": {
          "phaseNumber": {
            "type": "integer",
            "format": "int32"
          },
          "minGreen": {
            "type": "number",
            "format": "double"
          },
          "yellow": {
            "type": "number",
            "format": "double"
          },
          "redClearance": {
            "type": "number",
            "format": "double"
          },
          "minTime": {
            "type": "number",
            "format": "double"
          },
          "programmedSplit": {
            "type": "number",
            "format": "double"
          },
          "percentileSplit85th": {
            "type": "number",
            "format": "double"
          },
          "percentileSplit50th": {
            "type": "number",
            "format": "double"
          },
          "averageSplit": {
            "type": "number",
            "format": "double"
          },
          "percentMaxOutsForceOffs": {
            "type": "number",
            "format": "double"
          },
          "percentGapOuts": {
            "type": "number",
            "format": "double"
          },
          "percentSkips": {
            "type": "number",
            "format": "double"
          },
          "recommendedTSPMax": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "skipsGreaterThan70TSPMax": {
            "type": "number",
            "format": "double"
          },
          "forceOffsLessThan40TSPMax": {
            "type": "number",
            "format": "double"
          },
          "forceOffsLessThan60TSPMax": {
            "type": "number",
            "format": "double"
          },
          "forceOffsLessThan80TSPMax": {
            "type": "number",
            "format": "double"
          },
          "maxReduction": {
            "type": "integer",
            "format": "int32"
          },
          "maxExtension": {
            "type": "integer",
            "format": "int32"
          },
          "priorityMin": {
            "type": "integer",
            "format": "int32"
          },
          "priorityMax": {
            "type": "integer",
            "format": "int32"
          },
          "notes": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TransitSignalPriorityOptions": {
        "type": "object",
        "properties": {
          "locationsAndPhases": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocationPhases"
            },
            "nullable": true
          },
          "dates": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date-time"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TransitSignalPriorityPlan": {
        "type": "object",
        "properties": {
          "planNumber": {
            "type": "integer",
            "format": "int32"
          },
          "phases": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransitSignalPhase"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TransitSignalPriorityResult": {
        "type": "object",
        "properties": {
          "locationPhases": {
            "$ref": "#/components/schemas/LocationPhases"
          },
          "transitSignalPlans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransitSignalPriorityPlan"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TurningMovementCountData": {
        "type": "object",
        "properties": {
          "direction": {
            "type": "string",
            "nullable": true
          },
          "movementType": {
            "type": "string",
            "nullable": true
          },
          "laneType": {
            "type": "string",
            "nullable": true
          },
          "volumes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataPointForInt"
            },
            "nullable": true
          },
          "peakHourVolume": {
            "$ref": "#/components/schemas/DataPointForInt"
          }
        },
        "additionalProperties": false
      },
      "TurningMovementCountsLanesResult": {
        "type": "object",
        "properties": {
          "locationIdentifier": {
            "type": "string",
            "nullable": true
          },
          "locationDescription": {
            "type": "string",
            "nullable": true
          },
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          },
          "direction": {
            "type": "string",
            "nullable": true
          },
          "laneType": {
            "type": "string",
            "nullable": true
          },
          "movementType": {
            "type": "string",
            "nullable": true
          },
          "plans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Plan"
            },
            "nullable": true
          },
          "lanes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Lane"
            },
            "nullable": true
          },
          "totalHourlyVolumes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataPointForInt"
            },
            "nullable": true
          },
          "totalVolumes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataPointForInt"
            },
            "nullable": true
          },
          "totalVolume": {
            "type": "integer",
            "format": "int32"
          },
          "peakHour": {
            "type": "string",
            "nullable": true
          },
          "peakHourVolume": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "peakHourFactor": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "laneUtilizationFactor": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TurningMovementCountsOptions": {
        "type": "object",
        "properties": {
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          },
          "binSize": {
            "type": "integer",
            "format": "int32"
          },
          "metricTypeId": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "locationIdentifier": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TurningMovementCountsResult": {
        "type": "object",
        "properties": {
          "peakHour": {
            "$ref": "#/components/schemas/DateTimeInt32KeyValuePair"
          },
          "charts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TurningMovementCountsLanesResult"
            },
            "nullable": true
          },
          "table": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TurningMovementCountData"
            },
            "nullable": true
          },
          "peakHourFactor": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "VolumeOptions": {
        "type": "object",
        "properties": {
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          },
          "approachId": {
            "type": "integer",
            "format": "int32"
          },
          "startHour": {
            "type": "integer",
            "format": "int32"
          },
          "startMinute": {
            "type": "integer",
            "format": "int32"
          },
          "endHour": {
            "type": "integer",
            "format": "int32"
          },
          "endMinute": {
            "type": "integer",
            "format": "int32"
          },
          "daysOfWeek": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "locationIdentifier": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "VolumeResult": {
        "type": "object",
        "properties": {
          "opposingLanes": {
            "type": "integer",
            "format": "int32"
          },
          "crossProductReview": {
            "type": "boolean"
          },
          "decisionBoundariesReview": {
            "type": "boolean"
          },
          "leftTurnVolume": {
            "type": "number",
            "format": "double"
          },
          "opposingThroughVolume": {
            "type": "number",
            "format": "double"
          },
          "crossProductValue": {
            "type": "number",
            "format": "double"
          },
          "calculatedVolumeBoundary": {
            "type": "number",
            "format": "double"
          },
          "demandList": {
            "type": "object",
            "additionalProperties": {
              "type": "number",
              "format": "double"
            },
            "nullable": true
          },
          "direction": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "opposingDirection": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "WaitTimeOptions": {
        "type": "object",
        "properties": {
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          },
          "binSize": {
            "type": "integer",
            "format": "int32"
          },
          "locationIdentifier": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WaitTimeResult": {
        "type": "object",
        "properties": {
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          },
          "locationIdentifier": {
            "type": "string",
            "nullable": true
          },
          "locationDescription": {
            "type": "string",
            "nullable": true
          },
          "approachId": {
            "type": "integer",
            "format": "int32"
          },
          "approachDescription": {
            "type": "string",
            "nullable": true
          },
          "phaseNumber": {
            "type": "integer",
            "format": "int32"
          },
          "detectionTypes": {
            "type": "string",
            "nullable": true
          },
          "plans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlanWaitTime"
            },
            "nullable": true
          },
          "gapOuts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataPointForDouble"
            },
            "nullable": true
          },
          "maxOuts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataPointForDouble"
            },
            "nullable": true
          },
          "forceOffs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataPointForDouble"
            },
            "nullable": true
          },
          "unknowns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataPointForDouble"
            },
            "nullable": true
          },
          "average": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataPointForDouble"
            },
            "nullable": true
          },
          "volumes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataPointForInt"
            },
            "nullable": true
          },
          "planSplits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataPointForDouble"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "WatchDogComponentTypes": {
        "enum": [0, 1, 2],
        "type": "integer",
        "format": "int32"
      },
      "WatchDogDashboardOptions": {
        "type": "object",
        "properties": {
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "WatchDogFirmwareCount": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "counts": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "WatchDogFirmwareCountWatchDogModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "firmware": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WatchDogFirmwareCount"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WatchDogIssueTypeGroup": {
        "type": "object",
        "properties": {
          "issueType": {
            "$ref": "#/components/schemas/WatchDogIssueTypes"
          },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WatchDogProductInfo"
            },
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WatchDogIssueTypes": {
        "enum": [1, 2, 3, 4, 5, 6, 7, 8, 9],
        "type": "integer",
        "format": "int32"
      },
      "WatchDogLogEventDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "locationId": {
            "type": "integer",
            "format": "int32"
          },
          "locationIdentifier": {
            "type": "string",
            "nullable": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "componentType": {
            "$ref": "#/components/schemas/WatchDogComponentTypes"
          },
          "componentId": {
            "type": "integer",
            "format": "int32"
          },
          "issueType": {
            "$ref": "#/components/schemas/WatchDogIssueTypes"
          },
          "details": {
            "type": "string",
            "nullable": true
          },
          "phase": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "regionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "regionDescription": {
            "type": "string",
            "nullable": true
          },
          "jurisdictionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "jurisdictionName": {
            "type": "string",
            "nullable": true
          },
          "areas": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AreaDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WatchDogOptions": {
        "type": "object",
        "properties": {
          "areaId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "regionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "jurisdictionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "issueType": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          },
          "locationIdentifier": {
            "type": "string",
            "nullable": true
          },
          "isFilteredEvents": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "WatchDogProductInfo": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "model": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WatchDogFirmwareCountWatchDogModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WatchDogResult": {
        "type": "object",
        "properties": {
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          },
          "logEvents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WatchDogLogEventDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "XAxisType": {
        "enum": [0, 1, 2, 3, 4, 5],
        "type": "integer",
        "format": "int32"
      },
      "YellowRedActivationsOptions": {
        "type": "object",
        "properties": {
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          },
          "severeLevelSeconds": {
            "type": "number",
            "format": "double"
          },
          "metricTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "locationIdentifier": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "YellowRedActivationsPlan": {
        "type": "object",
        "properties": {
          "planNumber": {
            "type": "string",
            "nullable": true
          },
          "start": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "end": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "planDescription": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "totalViolations": {
            "type": "integer",
            "format": "int32"
          },
          "severeViolations": {
            "type": "integer",
            "format": "int32"
          },
          "percentViolations": {
            "type": "number",
            "format": "double"
          },
          "percentSevereViolations": {
            "type": "number",
            "format": "double"
          },
          "averageTimeViolations": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "YellowRedActivationsResult": {
        "type": "object",
        "properties": {
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          },
          "locationIdentifier": {
            "type": "string",
            "nullable": true
          },
          "locationDescription": {
            "type": "string",
            "nullable": true
          },
          "approachId": {
            "type": "integer",
            "format": "int32"
          },
          "approachDescription": {
            "type": "string",
            "nullable": true
          },
          "direction": {
            "type": "string",
            "nullable": true
          },
          "movementType": {
            "type": "string",
            "nullable": true
          },
          "protectedPhaseNumber": {
            "type": "integer",
            "format": "int32"
          },
          "permissivePhaseNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isPermissivePhase": {
            "type": "boolean"
          },
          "phaseType": {
            "type": "string",
            "nullable": true
          },
          "totalViolations": {
            "type": "integer",
            "format": "int32"
          },
          "severeViolations": {
            "type": "integer",
            "format": "int32"
          },
          "yellowLightOccurences": {
            "type": "integer",
            "format": "int32"
          },
          "plans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/YellowRedActivationsPlan"
            },
            "nullable": true
          },
          "redEvents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataPointForDouble"
            },
            "nullable": true
          },
          "yellowEvents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataPointForDouble"
            },
            "nullable": true
          },
          "redClearanceEvents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataPointForDouble"
            },
            "nullable": true
          },
          "detectorEvents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataPointForDouble"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "description": "Put **_ONLY_** your JWT Bearer token on textbox below!",
        "scheme": "Bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "Bearer": []
    }
  ]
}
