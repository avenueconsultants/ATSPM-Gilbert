version: "3.8"

x-environment: &default-environment
  ASPNETCORE_ENVIRONMENT: "Development"
  ASPNETCORE_Kestrel__Certificates__Default__Password: "password"
  ASPNETCORE_Kestrel__Certificates__Default__Path: "/root/.aspnet/https/aspnetapp.pfx"
  ASPNETCORE_URLS: "https://+:5000"

  # Allowed Hosts
  AllowedHosts: "${ALLOWED_HOSTS}"

  # Database Connection Strings (Using Double Underscore Format)
  ConnectionStrings__ConfigContext__ConnectionString: "${CONFIG_CONNECTION}"
  ConnectionStrings__AggregationContext__ConnectionString: "${AGGREGATION_CONNECTION}"
  ConnectionStrings__EventLogContext__ConnectionString: "${EVENTLOG_CONNECTION}"
  ConnectionStrings__IdentityContext__ConnectionString: "${IDENTITY_CONNECTION}"

  # Database Providers
  ConnectionStrings__ConfigContext__Provider: "${ConfigContext_Provider}"
  ConnectionStrings__AggregationContext__Provider: "${AggregationContext_Provider}"
  ConnectionStrings__EventLogContext__Provider: "${EventLogContext_Provider}"
  ConnectionStrings__IdentityContext__Provider: "${IdentityContext_Provider}"

  # JWT Configuration
  Jwt__ExpireDays: "${JWT_EXPIRE_DAYS}"
  Jwt__Key: "${JWT_KEY}"
  Jwt__Issuer: "${JWT_ISSUER}"

services:
  postgres:
    image: postgres:16
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      retries: 5

  database-installer:
    build:
      context: .
      dockerfile: DatabaseInstaller/Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      <<: *default-environment
      ADMIN_EMAIL: "${ADMIN_EMAIL}"
      ADMIN_ROLE: "${ADMIN_ROLE}"
      ADMIN_PASSWORD: "${ADMIN_PASSWORD}"
      SEED_ADMIN: "${SEED_ADMIN}"
    entrypoint: >
      dotnet DatabaseInstaller.dll update
      --config-connection "${CONFIG_CONNECTION}"
      --aggregation-connection "${AGGREGATION_CONNECTION}"
      --eventlog-connection "${EVENTLOG_CONNECTION}"
      --identity-connection "${IDENTITY_CONNECTION}"
      --provider "PostgreSQL"
      --admin-email "${ADMIN_EMAIL}"
      --admin-role "${ADMIN_ROLE}"
      --admin-password "${ADMIN_PASSWORD}"
      --seed-admin "${SEED_ADMIN}"

  configapi:
    build:
      context: .
      dockerfile: ConfigApi/Dockerfile
    ports:
      - "44400:5000"
    environment:
      <<: *default-environment
      ASPNETCORE_URLS: "https://+:5000"
    volumes:
      - ${CERT_LOCATION}
    user: root
    depends_on:
      database-installer:
        condition: service_completed_successfully

  dataapi:
    build:
      context: .
      dockerfile: DataApi/Dockerfile
    ports:
      - "44401:5001"
    environment:
      <<: *default-environment
      ASPNETCORE_URLS: "https://+:5001"
    volumes:
      - ${CERT_LOCATION}
    depends_on:
      database-installer:
        condition: service_completed_successfully

  reportapi:
    build:
      context: .
      dockerfile: ReportApi/Dockerfile
    ports:
      - "44402:5002"
    environment:
      <<: *default-environment
      ASPNETCORE_URLS: "https://+:5002"
    volumes:
      - ${CERT_LOCATION}
    depends_on:
      database-installer:
        condition: service_completed_successfully

  identityapi:
    build:
      context: .
      dockerfile: IdentityApi/Dockerfile
    ports:
      - "44403:5003"
    environment:
      <<: *default-environment
      ASPNETCORE_URLS: "https://+:5003"
    volumes:      
      - ${CERT_LOCATION}
    depends_on:
      database-installer:
        condition: service_completed_successfully
  
  webui:
    build:
      context: ./WebUI
      dockerfile: Dockerfile
      args:
        REACT_APP_CONFIG_URL: "https://configapi"
        REACT_APP_IDENTITY_URL: "https://identityapi"
        REACT_APP_REPORTS_URL: "https://reportapi"
        REACT_APP_DATA_URL: "https://dataapi"
        REACT_APP_SPEED_URL: "https://speedapi"
    container_name: webui
    ports:
      - "3000:3000"
    environment:
      REACT_APP_MAP_DEFAULT_LATITUDE: ${REACT_APP_MAP_DEFAULT_LATITUDE}
      REACT_APP_MAP_DEFAULT_LONGITUDE: ${REACT_APP_MAP_DEFAULT_LONGITUDE}
      REACT_APP_MAP_TILE_LAYER: ${REACT_APP_MAP_TILE_LAYER}
      REACT_APP_MAP_TILE_ATTRIBUTION: ${REACT_APP_MAP_TILE_ATTRIBUTION}
      REACT_APP_POWERED_BY_IMAGE_URL: ${REACT_APP_POWERED_BY_IMAGE_URL}
      REACT_APP_CONFIG_URL: "https://configapi"
      REACT_APP_IDENTITY_URL: "https://identityapi"
      REACT_APP_REPORTS_URL: "https://reportapi"
      REACT_APP_DATA_URL: "https://dataapi"
      REACT_APP_SPEED_URL: "https://speedapi"
    volumes:
      - ${CERT_LOCATION}
    depends_on:
      configapi:
        condition: service_started
      identityapi:
        condition: service_started
      reportapi:
        condition: service_started
      dataapi:
        condition: service_started

volumes:
  aspnet_https:
